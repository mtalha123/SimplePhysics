/**
 * @license almond 0.3.3 Copyright jQuery Foundation and other contributors.
 * Released under MIT license, http://github.com/requirejs/almond/LICENSE
 */

!function(t,e){"function"==typeof define?define(e):"object"==typeof exports?module.exports=e():t.SimplePhysics=e()}(this,function(){var t,e,n;return function(i){function o(t,e){return P.call(t,e)}function r(t,e){var n,i,o,r,s,a,u,l,c,y,p,f,v=e&&e.split("/"),h=D.map,d=h&&h["*"]||{};if(t){for(t=t.split("/"),s=t.length-1,D.nodeIdCompat&&x.test(t[s])&&(t[s]=t[s].replace(x,"")),"."===t[0].charAt(0)&&v&&(f=v.slice(0,v.length-1),t=f.concat(t)),c=0;c<t.length;c++)if(p=t[c],"."===p)t.splice(c,1),c-=1;else if(".."===p){if(0===c||1===c&&".."===t[2]||".."===t[c-1])continue;c>0&&(t.splice(c-1,2),c-=2)}t=t.join("/")}if((v||d)&&h){for(n=t.split("/"),c=n.length;c>0;c-=1){if(i=n.slice(0,c).join("/"),v)for(y=v.length;y>0;y-=1)if(o=h[v.slice(0,y).join("/")],o&&(o=o[i])){r=o,a=c;break}if(r)break;!u&&d&&d[i]&&(u=d[i],l=c)}!r&&u&&(r=u,a=l),r&&(n.splice(0,a,r),t=n.join("/"))}return t}function s(t,e){return function(){var n=b.call(arguments,0);return"string"!=typeof n[0]&&1===n.length&&n.push(null),v.apply(i,n.concat([t,e]))}}function a(t){return function(e){return r(e,t)}}function u(t){return function(e){g[t]=e}}function l(t){if(o(m,t)){var e=m[t];delete m[t],_[t]=!0,f.apply(i,e)}if(!o(g,t)&&!o(_,t))throw new Error("No "+t);return g[t]}function c(t){var e,n=t?t.indexOf("!"):-1;return n>-1&&(e=t.substring(0,n),t=t.substring(n+1,t.length)),[e,t]}function y(t){return t?c(t):[]}function p(t){return function(){return D&&D.config&&D.config[t]||{}}}var f,v,h,d,g={},m={},D={},_={},P=Object.prototype.hasOwnProperty,b=[].slice,x=/\.js$/;h=function(t,e){var n,i=c(t),o=i[0],s=e[1];return t=i[1],o&&(o=r(o,s),n=l(o)),o?t=n&&n.normalize?n.normalize(t,a(s)):r(t,s):(t=r(t,s),i=c(t),o=i[0],t=i[1],o&&(n=l(o))),{f:o?o+"!"+t:t,n:t,pr:o,p:n}},d={require:function(t){return s(t)},exports:function(t){var e=g[t];return"undefined"!=typeof e?e:g[t]={}},module:function(t){return{id:t,uri:"",exports:g[t],config:p(t)}}},f=function(t,e,n,r){var a,c,p,f,v,D,P,b=[],x=typeof n;if(r=r||t,D=y(r),"undefined"===x||"function"===x){for(e=!e.length&&n.length?["require","exports","module"]:e,v=0;v<e.length;v+=1)if(f=h(e[v],D),c=f.f,"require"===c)b[v]=d.require(t);else if("exports"===c)b[v]=d.exports(t),P=!0;else if("module"===c)a=b[v]=d.module(t);else if(o(g,c)||o(m,c)||o(_,c))b[v]=l(c);else{if(!f.p)throw new Error(t+" missing "+c);f.p.load(f.n,s(r,!0),u(c),{}),b[v]=g[c]}p=n?n.apply(g[t],b):void 0,t&&(a&&a.exports!==i&&a.exports!==g[t]?g[t]=a.exports:p===i&&P||(g[t]=p))}else t&&(g[t]=n)},t=e=v=function(t,e,n,o,r){if("string"==typeof t)return d[t]?d[t](e):l(h(t,y(e)).f);if(!t.splice){if(D=t,D.deps&&v(D.deps,D.callback),!e)return;e.splice?(t=e,e=n,n=null):t=i}return e=e||function(){},"function"==typeof n&&(n=o,o=r),o?f(i,t,e,n):setTimeout(function(){f(i,t,e,n)},4),v},v.config=function(t){return v(t)},t._defined=g,n=function(t,e,n){if("string"!=typeof t)throw new Error("See almond README: incorrect module build, no module name");e.splice||(n=e,e=[]),o(g,t)||o(m,t)||(m[t]=[t,e,n])},n.amd={jQuery:!0}}(),n("../build/almond",function(){}),n("Entity",[],function(){function t(t){this.id=t,this.type="circle",this.xPos=0,this.yPos=0,this.velocity=void 0,this.mass=void 0,this.radius=void 0,this.positionVector=void 0}return t.prototype.updatePosition=function(t,e){this.velocity.set(this.velocity.getX(),this.velocity.getY()+e),this.xPos+=this.velocity.getX()*t,this.yPos+=this.velocity.getY()*t},t}),n("EventSystem",[],function(){function t(t,e,i){for(var o in n)e===o&&(void 0!=i&&n[o].push(i),n[o].push(t))}function e(t,e){for(var t=t,e=e,i=0;i<n[t].length;i++)"function"==typeof n[t][i]&&("object"==typeof n[t][i-1]?n[t][i].call(n[t][i-1],{eventType:t,eventData:e}):n[t][i]({eventType:t,eventData:e}))}var n={entity_collision:[],boundary_collision:[],entity_spawned:[],entity_destroyed:[]};return{register:t,publishEvent:e}}),n("CollisionDetection",["EventSystem"],function(t){function e(){for(var e=0;e<o.length;e++){for(var n=e+1;n<o.length;n++){var i=Math.sqrt(Math.pow(o[e].xPos-o[n].xPos,2)+Math.pow(o[e].yPos-o[n].yPos,2));if(o[e].radius+o[n].radius>i){var l=o[e].radius+o[n].radius-i;t.publishEvent("entity_collision",{entity1:o[e],entity2:o[n],penetrationDepth:l})}}if(o[e].xPos-o[e].radius<r){var l=r-(o[e].xPos-o[e].radius);t.publishEvent("boundary_collision",{entity:o[e],boundary:"left",penetrationDepth:l})}if(o[e].xPos+o[e].radius>s){var l=o[e].xPos+o[e].radius-s;t.publishEvent("boundary_collision",{entity:o[e],boundary:"right",penetrationDepth:l})}if(o[e].yPos-o[e].radius<a){var l=a-(o[e].yPos-o[e].radius);t.publishEvent("boundary_collision",{entity:o[e],boundary:"top",penetrationDepth:l})}if(o[e].yPos+o[e].radius>u){var l=o[e].yPos+o[e].radius-u;t.publishEvent("boundary_collision",{entity:o[e],boundary:"bottom",penetrationDepth:l})}}}function n(t){if("entity_spawned"===t.eventType)o.push(t.eventData.entity);else for(var e=0;e<o.length;e++)if(o[e].id===t.eventData.entity.id)return void o.splice(e,1)}function i(t,e,n,i){r=t,s=n,a=e,u=i}var o=[];t.register(n,"entity_spawned"),t.register(n,"entity_destroyed");var r,s,a,u;return{checkForCollisions:e,setBoundaries:i}}),n("Vector2D",[],function(){function t(t,e){this._x=t,this._y=e,this._magnitude=Math.sqrt(Math.pow(t,2)+Math.pow(e,2))}return t.prototype.multiplyByScalar=function(e){return new t(this._x*e,this._y*e)},t.prototype.addWith=function(e){return new t(this._x+e.getX(),this._y+e.getY())},t.prototype.getMagnitude=function(){return this._magnitude},t.prototype.projectOnto=function(t){return t.multiplyByScalar((this._x*t.getX()+this._y*t.getY())/Math.pow(t.getMagnitude(),2))},t.prototype.getX=function(){return this._x},t.prototype.getY=function(){return this._y},t.prototype.set=function(t,e){this._x=t,this._y=e},t.prototype.normalize=function(){this._x/=this._magnitude,this._y/=this._magnitude,this._magnitude=1},t}),n("CollisionResponse",["EventSystem","Vector2D"],function(t,e){function n(t){if("entity_collision"===t.eventType){var n=t.eventData.entity1,i=t.eventData.entity2,o=n.velocity,r=i.velocity,s=new e(i.xPos-n.xPos,i.yPos-n.yPos);s.normalize();var a=new e(-1*s.getY(),s.getX()),u=s.multiplyByScalar(t.eventData.penetrationDepth);i.xPos+=u.getX(),i.yPos+=u.getY();var l=o.projectOnto(s),c=o.projectOnto(a),y=r.projectOnto(s),p=r.projectOnto(a),f=l.multiplyByScalar((n.mass-i.mass)/(n.mass+i.mass)).addWith(y.multiplyByScalar(2*i.mass/(n.mass+i.mass))),v=y.multiplyByScalar((i.mass-n.mass)/(n.mass+i.mass)).addWith(l.multiplyByScalar(2*n.mass/(n.mass+i.mass)));n.velocity=f.addWith(c),i.velocity=v.addWith(p)}else switch(t.eventData.boundary){case"left":t.eventData.entity.xPos+=t.eventData.penetrationDepth,t.eventData.entity.velocity.set(t.eventData.entity.velocity.getX()*-1,t.eventData.entity.velocity.getY());break;case"right":t.eventData.entity.xPos-=t.eventData.penetrationDepth,t.eventData.entity.velocity.set(t.eventData.entity.velocity.getX()*-1,t.eventData.entity.velocity.getY());break;case"top":t.eventData.entity.yPos+=t.eventData.penetrationDepth,t.eventData.entity.velocity.set(t.eventData.entity.velocity.getX(),t.eventData.entity.velocity.getY()*-1);break;case"bottom":t.eventData.entity.yPos-=t.eventData.penetrationDepth,t.eventData.entity.velocity.set(t.eventData.entity.velocity.getX(),t.eventData.entity.velocity.getY()*-1)}}t.register(n,"entity_collision"),t.register(n,"boundary_collision")}),n("PhysicsWorld",["Entity","EventSystem","CollisionDetection","CollisionResponse"],function(t,e,n,i){function o(t,e,i,o){var r,s,a,u;r=t?t:0,s=e?e:0,a=i?i:1280,u=o?o:720,n.setBoundaries(r,s,a,u)}var r=4,s=[],a=1/60,u=0;return o.prototype.requestEntity=function(){return u++,new t(u)},o.prototype.spawnEntity=function(t){s.push(t),e.publishEvent("entity_spawned",{entity:t})},o.prototype.update=function(){n.checkForCollisions();for(var t=0;t<s.length;t++)s[t].updatePosition(a,r)},o.prototype.setTimestep=function(t){a=t},o.prototype.setGravity=function(t){r=t},o.prototype.destroyEntity=function(t){for(var n=0;n<s.length;n++)if(t.id===s[n].id)return s.splice(n,1),void e.publishEvent("entity_destroyed",{entity:t})},o}),n("SimplePhysics",["PhysicsWorld","Vector2D"],function(t,e){return{Util:{Vector2D:e},PhysicsWorld:t}}),e("SimplePhysics")});